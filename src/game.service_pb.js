// source: game.service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.gamehub.proto.manager.service.GameCreateRequest', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameDetailsResponse', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameInfoRequest', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameListRequest', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameListResponse', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameUpdateCollectionRequest', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameUpdateImageRequest', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameUpdateRequest', null, global);
goog.exportSymbol('proto.gamehub.proto.manager.service.GameUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameCreateRequest.displayName = 'proto.gamehub.proto.manager.service.GameCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameUpdateResponse.displayName = 'proto.gamehub.proto.manager.service.GameUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameUpdateRequest.displayName = 'proto.gamehub.proto.manager.service.GameUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameUpdateImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameUpdateImageRequest.displayName = 'proto.gamehub.proto.manager.service.GameUpdateImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.displayName = 'proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameUpdateCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.displayName = 'proto.gamehub.proto.manager.service.GameUpdateCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameInfoRequest.displayName = 'proto.gamehub.proto.manager.service.GameInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gamehub.proto.manager.service.GameDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameDetailsResponse.displayName = 'proto.gamehub.proto.manager.service.GameDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.displayName = 'proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.displayName = 'proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameListRequest.displayName = 'proto.gamehub.proto.manager.service.GameListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gamehub.proto.manager.service.GameListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.gamehub.proto.manager.service.GameListResponse.repeatedFields_, null);
};
goog.inherits(proto.gamehub.proto.manager.service.GameListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gamehub.proto.manager.service.GameListResponse.displayName = 'proto.gamehub.proto.manager.service.GameListResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
identity: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: jspb.Message.getFieldWithDefault(msg, 2, ""),
providerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
bonusBet: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
bonusWagering: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
sort: jspb.Message.getFieldWithDefault(msg, 6, 0),
active: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameCreateRequest;
  return proto.gamehub.proto.manager.service.GameCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusBet(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusWagering(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSort(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProviderId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBonusBet();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBonusWagering();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSort();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string identity = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string provider_id = 3;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.getProviderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.setProviderId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool bonus_bet = 4;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.getBonusBet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.setBonusBet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool bonus_wagering = 5;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.getBonusWagering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.setBonusWagering = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 sort = 6;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.getSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool active = 7;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameCreateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameCreateRequest.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateResponse}
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameUpdateResponse;
  return proto.gamehub.proto.manager.service.GameUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateResponse}
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateResponse} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
name: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
providerId: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
bonusBet: (f = jspb.Message.getBooleanField(msg, 4)) == null ? undefined : f,
bonusWagering: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
sort: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
active: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameUpdateRequest;
  return proto.gamehub.proto.manager.service.GameUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusBet(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusWagering(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSort(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string provider_id = 3;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.getProviderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.setProviderId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.clearProviderId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.hasProviderId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool bonus_bet = 4;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.getBonusBet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.setBonusBet = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.clearBonusBet = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.hasBonusBet = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool bonus_wagering = 5;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.getBonusWagering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.setBonusWagering = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.clearBonusWagering = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.hasBonusWagering = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 sort = 6;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.getSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.setSort = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.clearSort = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.hasSort = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool active = 7;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.clearActive = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateRequest.prototype.hasActive = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameUpdateImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameUpdateImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
data: (f = msg.getData()) && proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameUpdateImageRequest;
  return proto.gamehub.proto.manager.service.GameUpdateImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk;
      reader.readMessage(value,proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameUpdateImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.toObject = function(includeInstance, msg) {
  var f, obj = {
key: jspb.Message.getFieldWithDefault(msg, 1, ""),
content: msg.getContent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk;
  return proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes content = 2;
 * @return {!(string|Uint8Array)}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.getContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes content = 2;
 * This is a type-conversion wrapper around `getContent()`
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.getContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContent()));
};


/**
 * optional bytes content = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContent()`
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.getContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContent()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk.prototype.setContent = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ImageChunk data = 2;
 * @return {?proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.getData = function() {
  return /** @type{?proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk} */ (
    jspb.Message.getWrapperField(this, proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk, 2));
};


/**
 * @param {?proto.gamehub.proto.manager.service.GameUpdateImageRequest.ImageChunk|undefined} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest} returns this
*/
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateImageRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameUpdateImageRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameUpdateCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
collectionId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateCollectionRequest}
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameUpdateCollectionRequest;
  return proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameUpdateCollectionRequest}
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameUpdateCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollectionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateCollectionRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection_id = 2;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.prototype.getCollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameUpdateCollectionRequest} returns this
 */
proto.gamehub.proto.manager.service.GameUpdateCollectionRequest.prototype.setCollectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameInfoRequest}
 */
proto.gamehub.proto.manager.service.GameInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameInfoRequest;
  return proto.gamehub.proto.manager.service.GameInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameInfoRequest}
 */
proto.gamehub.proto.manager.service.GameInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameInfoRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameInfoRequest} returns this
 */
proto.gamehub.proto.manager.service.GameInfoRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
identity: jspb.Message.getFieldWithDefault(msg, 2, ""),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
providerId: jspb.Message.getFieldWithDefault(msg, 4, ""),
bonusBet: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
bonusWagering: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
imagesMap: (f = msg.getImagesMap()) ? f.toObject(includeInstance, undefined) : [],
sort: jspb.Message.getFieldWithDefault(msg, 8, 0),
active: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
provider: (f = msg.getProvider()) && proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.toObject(includeInstance, f),
collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),
    proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameDetailsResponse;
  return proto.gamehub.proto.manager.service.GameDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusBet(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusWagering(value);
      break;
    case 7:
      var value = msg.getImagesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSort(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 10:
      var value = new proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto;
      reader.readMessage(value,proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    case 11:
      var value = new proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto;
      reader.readMessage(value,proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.deserializeBinaryFromReader);
      msg.addCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProviderId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBonusBet();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getBonusWagering();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getImagesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSort();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.serializeBinaryToWriter
    );
  }
  f = message.getCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
identity: jspb.Message.getFieldWithDefault(msg, 2, ""),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
imagesMap: (f = msg.getImagesMap()) ? f.toObject(includeInstance, undefined) : [],
active: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
gameCount: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto;
  return proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = msg.getImagesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGameCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImagesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getGameCount();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string identity = 2;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> images = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.getImagesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.clearImagesMap = function() {
  this.getImagesMap().clear();
  return this;
};


/**
 * optional bool active = 5;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 game_count = 6;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.getGameCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto.prototype.setGameCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.toObject = function(includeInstance, msg) {
  var f, obj = {
id: jspb.Message.getFieldWithDefault(msg, 1, ""),
identity: jspb.Message.getFieldWithDefault(msg, 2, ""),
name: jspb.Message.getFieldWithDefault(msg, 3, ""),
imagesMap: (f = msg.getImagesMap()) ? f.toObject(includeInstance, undefined) : [],
sort: jspb.Message.getFieldWithDefault(msg, 5, 0),
active: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto;
  return proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = msg.getImagesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSort(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImagesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getSort();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string identity = 2;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, string> images = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.getImagesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.clearImagesMap = function() {
  this.getImagesMap().clear();
  return this;
};


/**
 * optional int32 sort = 5;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.getSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.setSort = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool active = 6;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string identity = 2;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string provider_id = 4;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getProviderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setProviderId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool bonus_bet = 5;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getBonusBet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setBonusBet = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool bonus_wagering = 6;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getBonusWagering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setBonusWagering = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * map<string, string> images = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getImagesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.clearImagesMap = function() {
  this.getImagesMap().clear();
  return this;
};


/**
 * optional int32 sort = 8;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getSort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setSort = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool active = 9;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional ProviderDetailsDto provider = 10;
 * @return {?proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getProvider = function() {
  return /** @type{?proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto} */ (
    jspb.Message.getWrapperField(this, proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto, 10));
};


/**
 * @param {?proto.gamehub.proto.manager.service.GameDetailsResponse.ProviderDetailsDto|undefined} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
*/
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setProvider = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.clearProvider = function() {
  return this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated CollectionDetailsDto collections = 11;
 * @return {!Array<!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto>}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.getCollectionsList = function() {
  return /** @type{!Array<!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto, 11));
};


/**
 * @param {!Array<!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto>} value
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
*/
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.setCollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto}
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.addCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.gamehub.proto.manager.service.GameDetailsResponse.CollectionDetailsDto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse} returns this
 */
proto.gamehub.proto.manager.service.GameDetailsResponse.prototype.clearCollectionsList = function() {
  return this.setCollectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
name: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
providerId: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
bonusBet: (f = jspb.Message.getBooleanField(msg, 5)) == null ? undefined : f,
bonusWagering: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
active: (f = jspb.Message.getBooleanField(msg, 7)) == null ? undefined : f,
collectionId: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
identity: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest}
 */
proto.gamehub.proto.manager.service.GameListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameListRequest;
  return proto.gamehub.proto.manager.service.GameListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest}
 */
proto.gamehub.proto.manager.service.GameListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProviderId(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusBet(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBonusWagering(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional int32 offset = 1;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.clearName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string provider_id = 4;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getProviderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setProviderId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.clearProviderId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.hasProviderId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool bonus_bet = 5;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getBonusBet = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setBonusBet = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.clearBonusBet = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.hasBonusBet = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool bonus_wagering = 6;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getBonusWagering = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setBonusWagering = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.clearBonusWagering = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.hasBonusWagering = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool active = 7;
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.clearActive = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.hasActive = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string collection_id = 8;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getCollectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setCollectionId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.clearCollectionId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.hasCollectionId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string identity = 9;
 * @return {string}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.setIdentity = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gamehub.proto.manager.service.GameListRequest} returns this
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.clearIdentity = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gamehub.proto.manager.service.GameListRequest.prototype.hasIdentity = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.gamehub.proto.manager.service.GameListResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gamehub.proto.manager.service.GameListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.gamehub.proto.manager.service.GameListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gamehub.proto.manager.service.GameListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
totalItems: jspb.Message.getFieldWithDefault(msg, 1, 0),
itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.gamehub.proto.manager.service.GameDetailsResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gamehub.proto.manager.service.GameListResponse}
 */
proto.gamehub.proto.manager.service.GameListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gamehub.proto.manager.service.GameListResponse;
  return proto.gamehub.proto.manager.service.GameListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gamehub.proto.manager.service.GameListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gamehub.proto.manager.service.GameListResponse}
 */
proto.gamehub.proto.manager.service.GameListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setTotalItems(value);
      break;
    case 2:
      var value = new proto.gamehub.proto.manager.service.GameDetailsResponse;
      reader.readMessage(value,proto.gamehub.proto.manager.service.GameDetailsResponse.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gamehub.proto.manager.service.GameListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gamehub.proto.manager.service.GameListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gamehub.proto.manager.service.GameListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gamehub.proto.manager.service.GameListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalItems();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.gamehub.proto.manager.service.GameDetailsResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional sint32 total_items = 1;
 * @return {number}
 */
proto.gamehub.proto.manager.service.GameListResponse.prototype.getTotalItems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.gamehub.proto.manager.service.GameListResponse} returns this
 */
proto.gamehub.proto.manager.service.GameListResponse.prototype.setTotalItems = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated GameDetailsResponse items = 2;
 * @return {!Array<!proto.gamehub.proto.manager.service.GameDetailsResponse>}
 */
proto.gamehub.proto.manager.service.GameListResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.gamehub.proto.manager.service.GameDetailsResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.gamehub.proto.manager.service.GameDetailsResponse, 2));
};


/**
 * @param {!Array<!proto.gamehub.proto.manager.service.GameDetailsResponse>} value
 * @return {!proto.gamehub.proto.manager.service.GameListResponse} returns this
*/
proto.gamehub.proto.manager.service.GameListResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.gamehub.proto.manager.service.GameDetailsResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.gamehub.proto.manager.service.GameDetailsResponse}
 */
proto.gamehub.proto.manager.service.GameListResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.gamehub.proto.manager.service.GameDetailsResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.gamehub.proto.manager.service.GameListResponse} returns this
 */
proto.gamehub.proto.manager.service.GameListResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


goog.object.extend(exports, proto.gamehub.proto.manager.service);
