/**
 * @fileoverview gRPC-Web generated client stub for gamehub.proto.manager.service
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: provider.service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as provider_service_pb from './provider.service_pb'; // proto import: "provider.service.proto"


export class ProviderClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Provider/Create',
    grpcWeb.MethodType.UNARY,
    provider_service_pb.ProviderCreateRequest,
    provider_service_pb.ProviderUpdateResponse,
    (request: provider_service_pb.ProviderCreateRequest) => {
      return request.serializeBinary();
    },
    provider_service_pb.ProviderUpdateResponse.deserializeBinary
  );

  create(
    request: provider_service_pb.ProviderCreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<provider_service_pb.ProviderUpdateResponse>;

  create(
    request: provider_service_pb.ProviderCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderUpdateResponse) => void): grpcWeb.ClientReadableStream<provider_service_pb.ProviderUpdateResponse>;

  create(
    request: provider_service_pb.ProviderCreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Provider/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Provider/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Provider/Update',
    grpcWeb.MethodType.UNARY,
    provider_service_pb.ProviderUpdateRequest,
    provider_service_pb.ProviderUpdateResponse,
    (request: provider_service_pb.ProviderUpdateRequest) => {
      return request.serializeBinary();
    },
    provider_service_pb.ProviderUpdateResponse.deserializeBinary
  );

  update(
    request: provider_service_pb.ProviderUpdateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<provider_service_pb.ProviderUpdateResponse>;

  update(
    request: provider_service_pb.ProviderUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderUpdateResponse) => void): grpcWeb.ClientReadableStream<provider_service_pb.ProviderUpdateResponse>;

  update(
    request: provider_service_pb.ProviderUpdateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Provider/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Provider/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorUpdateImage = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Provider/UpdateImage',
    grpcWeb.MethodType.UNARY,
    provider_service_pb.ProviderUpdateImageRequest,
    provider_service_pb.ProviderUpdateResponse,
    (request: provider_service_pb.ProviderUpdateImageRequest) => {
      return request.serializeBinary();
    },
    provider_service_pb.ProviderUpdateResponse.deserializeBinary
  );

  updateImage(
    request: provider_service_pb.ProviderUpdateImageRequest,
    metadata?: grpcWeb.Metadata | null): Promise<provider_service_pb.ProviderUpdateResponse>;

  updateImage(
    request: provider_service_pb.ProviderUpdateImageRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderUpdateResponse) => void): grpcWeb.ClientReadableStream<provider_service_pb.ProviderUpdateResponse>;

  updateImage(
    request: provider_service_pb.ProviderUpdateImageRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Provider/UpdateImage',
        request,
        metadata || {},
        this.methodDescriptorUpdateImage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Provider/UpdateImage',
    request,
    metadata || {},
    this.methodDescriptorUpdateImage);
  }

  methodDescriptorInfo = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Provider/Info',
    grpcWeb.MethodType.UNARY,
    provider_service_pb.ProviderInfoRequest,
    provider_service_pb.ProviderDetailsResponse,
    (request: provider_service_pb.ProviderInfoRequest) => {
      return request.serializeBinary();
    },
    provider_service_pb.ProviderDetailsResponse.deserializeBinary
  );

  info(
    request: provider_service_pb.ProviderInfoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<provider_service_pb.ProviderDetailsResponse>;

  info(
    request: provider_service_pb.ProviderInfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderDetailsResponse) => void): grpcWeb.ClientReadableStream<provider_service_pb.ProviderDetailsResponse>;

  info(
    request: provider_service_pb.ProviderInfoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderDetailsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Provider/Info',
        request,
        metadata || {},
        this.methodDescriptorInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Provider/Info',
    request,
    metadata || {},
    this.methodDescriptorInfo);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Provider/List',
    grpcWeb.MethodType.UNARY,
    provider_service_pb.ProviderListRequest,
    provider_service_pb.ProviderListResponse,
    (request: provider_service_pb.ProviderListRequest) => {
      return request.serializeBinary();
    },
    provider_service_pb.ProviderListResponse.deserializeBinary
  );

  list(
    request: provider_service_pb.ProviderListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<provider_service_pb.ProviderListResponse>;

  list(
    request: provider_service_pb.ProviderListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderListResponse) => void): grpcWeb.ClientReadableStream<provider_service_pb.ProviderListResponse>;

  list(
    request: provider_service_pb.ProviderListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: provider_service_pb.ProviderListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Provider/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Provider/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

}

