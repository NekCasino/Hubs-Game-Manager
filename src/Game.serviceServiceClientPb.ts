/**
 * @fileoverview gRPC-Web generated client stub for gamehub.proto.manager.service
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: game.service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as game_service_pb from './game.service_pb'; // proto import: "game.service.proto"


export class GameClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreate = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Game/Create',
    grpcWeb.MethodType.UNARY,
    game_service_pb.GameCreateRequest,
    game_service_pb.GameUpdateResponse,
    (request: game_service_pb.GameCreateRequest) => {
      return request.serializeBinary();
    },
    game_service_pb.GameUpdateResponse.deserializeBinary
  );

  create(
    request: game_service_pb.GameCreateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<game_service_pb.GameUpdateResponse>;

  create(
    request: game_service_pb.GameCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void): grpcWeb.ClientReadableStream<game_service_pb.GameUpdateResponse>;

  create(
    request: game_service_pb.GameCreateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Game/Create',
        request,
        metadata || {},
        this.methodDescriptorCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Game/Create',
    request,
    metadata || {},
    this.methodDescriptorCreate);
  }

  methodDescriptorUpdate = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Game/Update',
    grpcWeb.MethodType.UNARY,
    game_service_pb.GameUpdateRequest,
    game_service_pb.GameUpdateResponse,
    (request: game_service_pb.GameUpdateRequest) => {
      return request.serializeBinary();
    },
    game_service_pb.GameUpdateResponse.deserializeBinary
  );

  update(
    request: game_service_pb.GameUpdateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<game_service_pb.GameUpdateResponse>;

  update(
    request: game_service_pb.GameUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void): grpcWeb.ClientReadableStream<game_service_pb.GameUpdateResponse>;

  update(
    request: game_service_pb.GameUpdateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Game/Update',
        request,
        metadata || {},
        this.methodDescriptorUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Game/Update',
    request,
    metadata || {},
    this.methodDescriptorUpdate);
  }

  methodDescriptorUpdateImage = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Game/UpdateImage',
    grpcWeb.MethodType.UNARY,
    game_service_pb.GameUpdateImageRequest,
    game_service_pb.GameUpdateResponse,
    (request: game_service_pb.GameUpdateImageRequest) => {
      return request.serializeBinary();
    },
    game_service_pb.GameUpdateResponse.deserializeBinary
  );

  updateImage(
    request: game_service_pb.GameUpdateImageRequest,
    metadata?: grpcWeb.Metadata | null): Promise<game_service_pb.GameUpdateResponse>;

  updateImage(
    request: game_service_pb.GameUpdateImageRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void): grpcWeb.ClientReadableStream<game_service_pb.GameUpdateResponse>;

  updateImage(
    request: game_service_pb.GameUpdateImageRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Game/UpdateImage',
        request,
        metadata || {},
        this.methodDescriptorUpdateImage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Game/UpdateImage',
    request,
    metadata || {},
    this.methodDescriptorUpdateImage);
  }

  methodDescriptorAddToCollection = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Game/AddToCollection',
    grpcWeb.MethodType.UNARY,
    game_service_pb.GameUpdateCollectionRequest,
    game_service_pb.GameUpdateResponse,
    (request: game_service_pb.GameUpdateCollectionRequest) => {
      return request.serializeBinary();
    },
    game_service_pb.GameUpdateResponse.deserializeBinary
  );

  addToCollection(
    request: game_service_pb.GameUpdateCollectionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<game_service_pb.GameUpdateResponse>;

  addToCollection(
    request: game_service_pb.GameUpdateCollectionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void): grpcWeb.ClientReadableStream<game_service_pb.GameUpdateResponse>;

  addToCollection(
    request: game_service_pb.GameUpdateCollectionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Game/AddToCollection',
        request,
        metadata || {},
        this.methodDescriptorAddToCollection,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Game/AddToCollection',
    request,
    metadata || {},
    this.methodDescriptorAddToCollection);
  }

  methodDescriptorRemoveFromCollection = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Game/RemoveFromCollection',
    grpcWeb.MethodType.UNARY,
    game_service_pb.GameUpdateCollectionRequest,
    game_service_pb.GameUpdateResponse,
    (request: game_service_pb.GameUpdateCollectionRequest) => {
      return request.serializeBinary();
    },
    game_service_pb.GameUpdateResponse.deserializeBinary
  );

  removeFromCollection(
    request: game_service_pb.GameUpdateCollectionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<game_service_pb.GameUpdateResponse>;

  removeFromCollection(
    request: game_service_pb.GameUpdateCollectionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void): grpcWeb.ClientReadableStream<game_service_pb.GameUpdateResponse>;

  removeFromCollection(
    request: game_service_pb.GameUpdateCollectionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: game_service_pb.GameUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Game/RemoveFromCollection',
        request,
        metadata || {},
        this.methodDescriptorRemoveFromCollection,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Game/RemoveFromCollection',
    request,
    metadata || {},
    this.methodDescriptorRemoveFromCollection);
  }

  methodDescriptorInfo = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Game/Info',
    grpcWeb.MethodType.UNARY,
    game_service_pb.GameInfoRequest,
    game_service_pb.GameDetailsResponse,
    (request: game_service_pb.GameInfoRequest) => {
      return request.serializeBinary();
    },
    game_service_pb.GameDetailsResponse.deserializeBinary
  );

  info(
    request: game_service_pb.GameInfoRequest,
    metadata?: grpcWeb.Metadata | null): Promise<game_service_pb.GameDetailsResponse>;

  info(
    request: game_service_pb.GameInfoRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: game_service_pb.GameDetailsResponse) => void): grpcWeb.ClientReadableStream<game_service_pb.GameDetailsResponse>;

  info(
    request: game_service_pb.GameInfoRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: game_service_pb.GameDetailsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Game/Info',
        request,
        metadata || {},
        this.methodDescriptorInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Game/Info',
    request,
    metadata || {},
    this.methodDescriptorInfo);
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/gamehub.proto.manager.service.Game/List',
    grpcWeb.MethodType.UNARY,
    game_service_pb.GameListRequest,
    game_service_pb.GameListResponse,
    (request: game_service_pb.GameListRequest) => {
      return request.serializeBinary();
    },
    game_service_pb.GameListResponse.deserializeBinary
  );

  list(
    request: game_service_pb.GameListRequest,
    metadata?: grpcWeb.Metadata | null): Promise<game_service_pb.GameListResponse>;

  list(
    request: game_service_pb.GameListRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: game_service_pb.GameListResponse) => void): grpcWeb.ClientReadableStream<game_service_pb.GameListResponse>;

  list(
    request: game_service_pb.GameListRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: game_service_pb.GameListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gamehub.proto.manager.service.Game/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gamehub.proto.manager.service.Game/List',
    request,
    metadata || {},
    this.methodDescriptorList);
  }

}

